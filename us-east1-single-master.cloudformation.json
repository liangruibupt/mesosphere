{"Metadata":{"TemplateGenerationDate":"2017-07-01 01:45:55.667714","DcosImageCommit":"65d66d7f399fe13bba8960c1f2c42ef9fa5dcf8d"},"Mappings":{"RegionToAmi":{"ap-southeast-1":{"stable":"ami-3120fe52"},"sa-east-1":{"stable":"ami-61e3750d"},"eu-central-1":{"stable":"ami-3ae31555"},"us-gov-west-1":{"stable":"ami-b712acd6"},"ap-northeast-1":{"stable":"ami-965899f7"},"us-east-1":{"stable":"ami-0262df9847d7b9883"},"us-west-1":{"stable":"ami-ee57148e"},"ap-southeast-2":{"stable":"ami-b1291dd2"},"us-west-2":{"stable":"ami-dc6ba3bc"},"eu-west-1":{"stable":"ami-b7cba3c4"}},"NATAmi":{"ap-southeast-1":{"default":"ami-b082dae2"},"sa-east-1":{"default":"ami-b972dba4"},"eu-central-1":{"default":"ami-204c7a3d"},"us-gov-west-1":{"default":"ami-e8ab1489"},"ap-northeast-1":{"default":"ami-55c29e54"},"us-east-1":{"default":"ami-4c9e4b24"},"us-west-1":{"default":"ami-2b2b296e"},"ap-southeast-2":{"default":"ami-996402a3"},"us-west-2":{"default":"ami-bb69128b"},"eu-west-1":{"default":"ami-3760b040"}},"Parameters":{"StackCreationTimeout":{"default":"PT45M"},"VPCSubnetRange":{"default":"10.0.0.0/16"},"MasterInstanceType":{"default":"m4.xlarge"},"PublicSubnetRange":{"default":"10.0.4.0/22"},"PublicSlaveInstanceType":{"default":"m4.xlarge"},"SlaveInstanceType":{"default":"m4.xlarge"},"PrivateSubnetRange":{"default":"10.0.0.0/22"}}},"Parameters":{"OAuthEnabled":{"Type":"String","Description":"\nEnable OAuth authentication","Default":"true","AllowedValues":["true","false"]},"AdminLocation":{"Type":"String","AllowedPattern":"^([0-9]+\\.){3}[0-9]+\\/[0-9]+$","Description":"Optional: Specify the IP range to whitelist for access to the admin zone. Must be a valid CIDR.","MinLength":"9","Default":"0.0.0.0/0","ConstraintDescription":"must be a valid CIDR.","MaxLength":"18"},"SlaveInstanceCount":{"Type":"Number","Description":"Required: Specify the number of private agent nodes or accept the default.","Default":"5"},"KeyName":{"Type":"AWS::EC2::KeyPair::KeyName","Description":"Required: Specify your AWS EC2 Key Pair."},"PublicSlaveInstanceCount":{"Type":"Number","Description":"Required: Specify the number of public agent nodes or accept the default.","Default":"1"}},"Conditions":{"RegionIsUsGovWest1":{"Fn::Equals":[{"Ref":"AWS::Region"},"us-gov-west-1"]},"RegionIsUsEast1":{"Fn::Equals":[{"Ref":"AWS::Region"},"us-east-1"]}},"Description":"DC/OS AWS CloudFormation Template","Resources":{"OutboundNetworkAclEntry":{"Type":"AWS::EC2::NetworkAclEntry","Properties":{"Egress":"true","RuleAction":"allow","CidrBlock":"0.0.0.0/0","NetworkAclId":{"Ref":"PublicNetworkAcl"},"PortRange":{"From":"0","To":"65535"},"RuleNumber":"100","Protocol":"-1"}},"VPCDHCPOptionsAssociation":{"Type":"AWS::EC2::VPCDHCPOptionsAssociation","Properties":{"DhcpOptionsId":{"Ref":"DHCPOptions"},"VpcId":{"Ref":"Vpc"}},"DependsOn":"Vpc"},"SlaveSecurityGroup":{"Type":"AWS::EC2::SecurityGroup","Properties":{"GroupDescription":"Mesos Slaves","VpcId":{"Ref":"Vpc"}}},"PrivateSubnet":{"Type":"AWS::EC2::Subnet","Properties":{"CidrBlock":{"Fn::FindInMap":["Parameters","PrivateSubnetRange","default"]},"Tags":[{"Key":"Application","Value":{"Ref":"AWS::StackName"}},{"Key":"Network","Value":"Private"}],"VpcId":{"Ref":"Vpc"}},"DependsOn":"Vpc"},"PublicSlaveSecurityGroup":{"Type":"AWS::EC2::SecurityGroup","Properties":{"GroupDescription":"Mesos Slaves Public","VpcId":{"Ref":"Vpc"}}},"PublicSlaveIngressTwo":{"Type":"AWS::EC2::SecurityGroupIngress","Properties":{"FromPort":"23","ToPort":"5050","GroupId":{"Ref":"PublicSlaveSecurityGroup"},"CidrIp":"0.0.0.0/0","IpProtocol":"tcp"}},"PublicSlaveToMasterIngress":{"Type":"AWS::EC2::SecurityGroupIngress","Properties":{"FromPort":"0","ToPort":"65535","GroupId":{"Ref":"MasterSecurityGroup"},"IpProtocol":"-1","SourceSecurityGroupId":{"Ref":"PublicSlaveSecurityGroup"}}},"SlaveInstanceProfile":{"Type":"AWS::IAM::InstanceProfile","Properties":{"Roles":[{"Ref":"SlaveRole"}],"Path":"/"}},"InternetGateway":{"Type":"AWS::EC2::InternetGateway","DependsOn":"Vpc","Properties":{"Tags":[{"Key":"Application","Value":{"Ref":"AWS::StackName"}},{"Key":"Network","Value":"Public"}]}},"MasterToMasterIngress":{"Type":"AWS::EC2::SecurityGroupIngress","Properties":{"FromPort":"0","ToPort":"65535","GroupId":{"Ref":"MasterSecurityGroup"},"IpProtocol":"-1","SourceSecurityGroupId":{"Ref":"MasterSecurityGroup"}}},"PublicSlaveToPublicSlaveIngress":{"Type":"AWS::EC2::SecurityGroupIngress","Properties":{"FromPort":"0","ToPort":"65535","GroupId":{"Ref":"PublicSlaveSecurityGroup"},"IpProtocol":"-1","SourceSecurityGroupId":{"Ref":"PublicSlaveSecurityGroup"}}},"ElasticLoadBalancer":{"Type":"AWS::ElasticLoadBalancing::LoadBalancer","DependsOn":"GatewayToInternet","Properties":{"HealthCheck":{"Timeout":"5","UnhealthyThreshold":"2","Target":"TCP:5050","Interval":"30","HealthyThreshold":"2"},"SecurityGroups":[{"Ref":"LbSecurityGroup"},{"Ref":"AdminSecurityGroup"}],"Subnets":[{"Ref":"PublicSubnet"}],"Listeners":[{"LoadBalancerPort":"80","InstancePort":"80","InstanceProtocol":"TCP","Protocol":"TCP"},{"LoadBalancerPort":"443","InstancePort":"443","InstanceProtocol":"TCP","Protocol":"TCP"}]}},"PrivateInboundNetworkAclEntry":{"Type":"AWS::EC2::NetworkAclEntry","Properties":{"Egress":"false","RuleAction":"allow","CidrBlock":"0.0.0.0/0","NetworkAclId":{"Ref":"PrivateNetworkAcl"},"PortRange":{"From":"0","To":"65535"},"RuleNumber":"100","Protocol":"-1"}},"PublicSubnetRouteTableAssociation":{"Type":"AWS::EC2::SubnetRouteTableAssociation","Properties":{"RouteTableId":{"Ref":"PublicRouteTable"},"SubnetId":{"Ref":"PublicSubnet"}}},"SlaveLaunchConfig":{"Type":"AWS::AutoScaling::LaunchConfiguration","Properties":{"SecurityGroups":[{"Ref":"SlaveSecurityGroup"}],"ImageId":{"Fn::FindInMap":["RegionToAmi",{"Ref":"AWS::Region"},"stable"]},"UserData":{"Fn::Base64":{"Fn::Join":["",["#cloud-config\n","\"coreos\":\n","  \"units\":\n","  - \"command\": |-\n","      start\n","    \"content\": |\n","      [Unit]\n","      Description=AWS Setup: Formats the /var/lib ephemeral drive\n","      Before=var-lib.mount dbus.service\n","      [Service]\n","      Type=oneshot\n","      RemainAfterExit=yes\n","      ExecStart=/bin/bash -c \"(blkid -t TYPE=ext4 | grep xvdb) || (/usr/sbin/mkfs.ext4 -F /dev/xvdb)\"\n","    \"name\": |-\n","      format-var-lib-ephemeral.service\n","  - \"command\": |-\n","      start\n","    \"content\": |\n","      [Unit]\n","      Description=AWS Setup: Mount /var/lib\n","      Before=dbus.service\n","      [Mount]\n","      What=/dev/xvdb\n","      Where=/var/lib\n","      Type=ext4\n","    \"name\": |-\n","      var-lib.mount\n","  - \"command\": |-\n","      stop\n","    \"mask\": !!bool |-\n","      true\n","    \"name\": |-\n","      etcd.service\n","  - \"command\": |-\n","      stop\n","    \"mask\": !!bool |-\n","      true\n","    \"name\": |-\n","      update-engine.service\n","  - \"command\": |-\n","      stop\n","    \"mask\": !!bool |-\n","      true\n","    \"name\": |-\n","      locksmithd.service\n","  - \"command\": |-\n","      stop\n","    \"name\": |-\n","      systemd-resolved.service\n","  - \"command\": |-\n","      restart\n","    \"name\": |-\n","      systemd-journald.service\n","  - \"command\": |-\n","      restart\n","    \"name\": |-\n","      docker.service\n","  - \"command\": |-\n","      start\n","    \"content\": |\n","      [Unit]\n","      Before=dcos.target\n","      [Service]\n","      Type=oneshot\n","      StandardOutput=journal+console\n","      StandardError=journal+console\n","      ExecStartPre=/usr/bin/mkdir -p /etc/profile.d\n","      ExecStart=/usr/bin/ln -sf /opt/mesosphere/environment.export /etc/profile.d/dcos.sh\n","    \"name\": |-\n","      dcos-link-env.service\n","  - \"content\": |\n","      [Unit]\n","      Description=Pkgpanda: Download DC/OS to this host.\n","      After=network-online.target\n","      Wants=network-online.target\n","      ConditionPathExists=!/opt/mesosphere/\n","      [Service]\n","      Type=oneshot\n","      StandardOutput=journal+console\n","      StandardError=journal+console\n","      ExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20 -Y 100000 -y 60 -o /tmp/bootstrap.tar.xz https://downloads.dcos.io/dcos/stable/1.8.9/bootstrap/f21c4f494ef565f509929a6c99bee7da66309bd2.bootstrap.tar.xz\n","      ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere\n","      ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere\n","      ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz\n","    \"name\": |-\n","      dcos-download.service\n","  - \"command\": |-\n","      start\n","    \"content\": |\n","      [Unit]\n","      Description=Pkgpanda: Specialize DC/OS for this host.\n","      Requires=dcos-download.service\n","      After=dcos-download.service\n","      [Service]\n","      Type=oneshot\n","      StandardOutput=journal+console\n","      StandardError=journal+console\n","      EnvironmentFile=/opt/mesosphere/environment\n","      ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd\n","      [Install]\n","      WantedBy=multi-user.target\n","    \"enable\": !!bool |-\n","      true\n","    \"name\": |-\n","      dcos-setup.service\n","    \"no_block\": !!bool |-\n","      true\n","  - \"command\": |-\n","      start\n","    \"content\": |-\n","      [Unit]\n","      Description=AWS Setup: Signal CloudFormation Success\n","      ConditionPathExists=!/var/lib/dcos-cfn-signal\n","      [Service]\n","      Type=simple\n","      Restart=on-failure\n","      StartLimitInterval=0\n","      RestartSec=15s\n","      EnvironmentFile=/opt/mesosphere/environment\n","      EnvironmentFile=/opt/mesosphere/etc/cfn_signal_metadata\n","      Environment=\"AWS_CFN_SIGNAL_THIS_RESOURCE=SlaveServerGroup\"\n","      ExecStartPre=/bin/ping -c1 leader.mesos\n","      ExecStartPre=/opt/mesosphere/bin/cfn-signal\n","      ExecStart=/usr/bin/touch /var/lib/dcos-cfn-signal\n","    \"name\": |-\n","      dcos-cfn-signal.service\n","    \"no_block\": !!bool |-\n","      true\n","  \"update\":\n","    \"reboot-strategy\": |-\n","      off\n","\"write_files\":\n","- \"content\": |\n","    https://downloads.dcos.io/dcos/stable/1.8.9\n","  \"owner\": |-\n","    root\n","  \"path\": |-\n","    /etc/mesosphere/setup-flags/repository-url\n","  \"permissions\": |-\n","    0644\n","- \"content\": |\n","    [\"dcos-config--setup_27e644b00ac2447f3ba131338b3d8784120c7d62\", \"dcos-metadata--setup_27e644b00ac2447f3ba131338b3d8784120c7d62\"]\n","  \"owner\": |-\n","    root\n","  \"path\": |-\n","    /etc/mesosphere/setup-flags/cluster-packages.json\n","  \"permissions\": |-\n","    0644\n","- \"content\": |\n","    [Journal]\n","    MaxLevelConsole=warning\n","    RateLimitInterval=1s\n","    RateLimitBurst=20000\n","  \"owner\": |-\n","    root\n","  \"path\": |-\n","    /etc/systemd/journald.conf.d/dcos.conf\n","  \"permissions\": |-\n","    0644\n","- \"content\": |\n","    rexray:\n","      loglevel: info\n","      modules:\n","        default-admin:\n","          host: tcp://127.0.0.1:61003\n","      storageDrivers:\n","      - ec2\n","      volume:\n","        unmount:\n","          ignoreusedcount: true\n","  \"path\": |-\n","    /etc/rexray/config.yml\n","  \"permissions\": |-\n","    0644\n","- \"content\": |\n","    MESOS_CLUSTER=",{"Ref":"AWS::StackName"},"","\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/mesos-master-provider\n","- \"content\": |\n","    ADMINROUTER_ACTIVATE_AUTH_MODULE=",{"Ref":"OAuthEnabled"},"","\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/adminrouter.env\n","- \"content\": |\n","    MASTER_SOURCE=exhibitor_uri\n","    EXHIBITOR_URI=http://",{"Fn::GetAtt":["InternalMasterLoadBalancer","DNSName"]},":8181/exhibitor/v1/cluster/status","\n","    EXHIBITOR_ADDRESS=",{"Fn::GetAtt":["InternalMasterLoadBalancer","DNSName"]},"","\n","    RESOLVERS=169.254.169.253\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/dns_config\n","- \"content\": |\n","    EXHIBITOR_BACKEND=AWS_S3\n","    AWS_REGION=",{"Ref":"AWS::Region"},"","\n","    AWS_S3_BUCKET=",{"Ref":"ExhibitorS3Bucket"},"","\n","    AWS_S3_PREFIX=",{"Ref":"AWS::StackName"},"","\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/exhibitor\n","- \"content\": |\n","    {\"uiConfiguration\":{\"plugins\":{\"banner\":{\"enabled\":false,\"backgroundColor\":\"#1E232F\",\"foregroundColor\":\"#FFFFFF\",\"headerTitle\":null,\"headerContent\":null,\"footerContent\":null,\"imagePath\":null,\"dismissible\":null},\"branding\":{\"enabled\":false},\"external-links\": {\"enabled\": false},\n","\n","    \"authentication\":{\"enabled\":false},\n","\n","    \"oauth\":{\"enabled\":",{"Ref":"OAuthEnabled"},",\"authHost\":\"https://dcos.auth0.com\"},","\n","\n","\n","    \"tracking\":{\"enabled\":true}}}}\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/ui-config.json\n","- \"content\": |\n","    AWS_REGION=",{"Ref":"AWS::Region"},"","\n","    AWS_STACK_ID=",{"Ref":"AWS::StackId"},"","\n","    AWS_STACK_NAME=",{"Ref":"AWS::StackName"},"","\n","    AWS_IAM_MASTER_ROLE_NAME=",{"Ref":"MasterRole"},"","\n","    AWS_IAM_SLAVE_ROLE_NAME=",{"Ref":"SlaveRole"},"","\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/cfn_signal_metadata\n","- \"content\": |\n","    INTERNAL_MASTER_LB_DNSNAME=",{"Fn::GetAtt":["InternalMasterLoadBalancer","DNSName"]},"","\n","    MASTER_LB_DNSNAME=",{"Fn::GetAtt":["ElasticLoadBalancer","DNSName"]},"","\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/aws_dnsnames\n","- \"content\": |-\n","    {}\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/pkginfo.json\n","- \"content\": \"\"\n","  \"path\": |-\n","    /etc/mesosphere/roles/slave\n","- \"content\": \"\"\n","  \"path\": |-\n","    /etc/mesosphere/roles/aws\n"]]}},"BlockDeviceMappings":[{"DeviceName":"/dev/sdb","VirtualName":"ephemeral0"}],"AssociatePublicIpAddress":"false","IamInstanceProfile":{"Ref":"SlaveInstanceProfile"},"InstanceType":{"Fn::FindInMap":["Parameters","SlaveInstanceType","default"]},"KeyName":{"Ref":"KeyName"},"EbsOptimized":"true"}},"SlaveToMasterLBIngress":{"Type":"AWS::EC2::SecurityGroupIngress","Properties":{"FromPort":"2181","ToPort":"2181","GroupId":{"Ref":"LbSecurityGroup"},"IpProtocol":"tcp","SourceSecurityGroupId":{"Ref":"SlaveSecurityGroup"}}},"PublicSlaveIngressSix":{"Type":"AWS::EC2::SecurityGroupIngress","Properties":{"FromPort":"5052","ToPort":"32000","GroupId":{"Ref":"PublicSlaveSecurityGroup"},"CidrIp":"0.0.0.0/0","IpProtocol":"udp"}},"MasterToSlaveIngress":{"Type":"AWS::EC2::SecurityGroupIngress","Properties":{"FromPort":"0","ToPort":"65535","GroupId":{"Ref":"SlaveSecurityGroup"},"IpProtocol":"-1","SourceSecurityGroupId":{"Ref":"MasterSecurityGroup"}}},"PrivateRoute":{"Type":"AWS::EC2::Route","Properties":{"DestinationCidrBlock":"0.0.0.0/0","RouteTableId":{"Ref":"PrivateRouteTable"},"InstanceId":{"Ref":"NATInstance"}}},"MasterRole":{"Type":"AWS::IAM::Role","Properties":{"AssumeRolePolicyDocument":{"Version":"2012-10-17","Statement":[{"Principal":{"Service":["ec2.amazonaws.com"]},"Effect":"Allow","Action":["sts:AssumeRole"]}]},"Policies":[{"PolicyDocument":{"Version":"2012-10-17","Statement":[{"Resource":[{"Fn::Join":["",[{"Fn::If":["RegionIsUsGovWest1","arn:aws-us-gov:s3:::","arn:aws:s3:::"]},{"Ref":"ExhibitorS3Bucket"},"/*"]]},{"Fn::Join":["",[{"Fn::If":["RegionIsUsGovWest1","arn:aws-us-gov:s3:::","arn:aws:s3:::"]},{"Ref":"ExhibitorS3Bucket"}]]}],"Effect":"Allow","Action":["s3:AbortMultipartUpload","s3:DeleteObject","s3:GetBucketAcl","s3:GetBucketPolicy","s3:GetObject","s3:GetObjectAcl","s3:ListBucket","s3:ListBucketMultipartUploads","s3:ListMultipartUploadParts","s3:PutObject","s3:PutObjectAcl"]},{"Resource":[{"Ref":"AWS::StackId"},{"Fn::Join":["",[{"Ref":"AWS::StackId"},"/*"]]}],"Effect":"Allow","Action":["cloudformation:*"]},{"Resource":"*","Effect":"Allow","Action":["ec2:DescribeKeyPairs","ec2:DescribeSubnets","autoscaling:DescribeLaunchConfigurations","autoscaling:UpdateAutoScalingGroup","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeScalingActivities","elasticloadbalancing:DescribeLoadBalancers"]}]},"PolicyName":"root"}],"Path":"/"}},"PublicSlaveLaunchConfig":{"Type":"AWS::AutoScaling::LaunchConfiguration","Properties":{"SecurityGroups":[{"Ref":"PublicSlaveSecurityGroup"}],"ImageId":{"Fn::FindInMap":["RegionToAmi",{"Ref":"AWS::Region"},"stable"]},"UserData":{"Fn::Base64":{"Fn::Join":["",["#cloud-config\n","\"coreos\":\n","  \"units\":\n","  - \"command\": |-\n","      start\n","    \"content\": |\n","      [Unit]\n","      Description=AWS Setup: Formats the /var/lib ephemeral drive\n","      Before=var-lib.mount dbus.service\n","      [Service]\n","      Type=oneshot\n","      RemainAfterExit=yes\n","      ExecStart=/bin/bash -c \"(blkid -t TYPE=ext4 | grep xvdb) || (/usr/sbin/mkfs.ext4 -F /dev/xvdb)\"\n","    \"name\": |-\n","      format-var-lib-ephemeral.service\n","  - \"command\": |-\n","      start\n","    \"content\": |\n","      [Unit]\n","      Description=AWS Setup: Mount /var/lib\n","      Before=dbus.service\n","      [Mount]\n","      What=/dev/xvdb\n","      Where=/var/lib\n","      Type=ext4\n","    \"name\": |-\n","      var-lib.mount\n","  - \"command\": |-\n","      stop\n","    \"mask\": !!bool |-\n","      true\n","    \"name\": |-\n","      etcd.service\n","  - \"command\": |-\n","      stop\n","    \"mask\": !!bool |-\n","      true\n","    \"name\": |-\n","      update-engine.service\n","  - \"command\": |-\n","      stop\n","    \"mask\": !!bool |-\n","      true\n","    \"name\": |-\n","      locksmithd.service\n","  - \"command\": |-\n","      stop\n","    \"name\": |-\n","      systemd-resolved.service\n","  - \"command\": |-\n","      restart\n","    \"name\": |-\n","      systemd-journald.service\n","  - \"command\": |-\n","      restart\n","    \"name\": |-\n","      docker.service\n","  - \"command\": |-\n","      start\n","    \"content\": |\n","      [Unit]\n","      Before=dcos.target\n","      [Service]\n","      Type=oneshot\n","      StandardOutput=journal+console\n","      StandardError=journal+console\n","      ExecStartPre=/usr/bin/mkdir -p /etc/profile.d\n","      ExecStart=/usr/bin/ln -sf /opt/mesosphere/environment.export /etc/profile.d/dcos.sh\n","    \"name\": |-\n","      dcos-link-env.service\n","  - \"content\": |\n","      [Unit]\n","      Description=Pkgpanda: Download DC/OS to this host.\n","      After=network-online.target\n","      Wants=network-online.target\n","      ConditionPathExists=!/opt/mesosphere/\n","      [Service]\n","      Type=oneshot\n","      StandardOutput=journal+console\n","      StandardError=journal+console\n","      ExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20 -Y 100000 -y 60 -o /tmp/bootstrap.tar.xz https://downloads.dcos.io/dcos/stable/1.8.9/bootstrap/f21c4f494ef565f509929a6c99bee7da66309bd2.bootstrap.tar.xz\n","      ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere\n","      ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere\n","      ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz\n","    \"name\": |-\n","      dcos-download.service\n","  - \"command\": |-\n","      start\n","    \"content\": |\n","      [Unit]\n","      Description=Pkgpanda: Specialize DC/OS for this host.\n","      Requires=dcos-download.service\n","      After=dcos-download.service\n","      [Service]\n","      Type=oneshot\n","      StandardOutput=journal+console\n","      StandardError=journal+console\n","      EnvironmentFile=/opt/mesosphere/environment\n","      ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd\n","      [Install]\n","      WantedBy=multi-user.target\n","    \"enable\": !!bool |-\n","      true\n","    \"name\": |-\n","      dcos-setup.service\n","    \"no_block\": !!bool |-\n","      true\n","  - \"command\": |-\n","      start\n","    \"content\": |-\n","      [Unit]\n","      Description=AWS Setup: Signal CloudFormation Success\n","      ConditionPathExists=!/var/lib/dcos-cfn-signal\n","      [Service]\n","      Type=simple\n","      Restart=on-failure\n","      StartLimitInterval=0\n","      RestartSec=15s\n","      EnvironmentFile=/opt/mesosphere/environment\n","      EnvironmentFile=/opt/mesosphere/etc/cfn_signal_metadata\n","      Environment=\"AWS_CFN_SIGNAL_THIS_RESOURCE=PublicSlaveServerGroup\"\n","      ExecStartPre=/bin/ping -c1 leader.mesos\n","      ExecStartPre=/opt/mesosphere/bin/cfn-signal\n","      ExecStart=/usr/bin/touch /var/lib/dcos-cfn-signal\n","    \"name\": |-\n","      dcos-cfn-signal.service\n","    \"no_block\": !!bool |-\n","      true\n","  \"update\":\n","    \"reboot-strategy\": |-\n","      off\n","\"write_files\":\n","- \"content\": |\n","    https://downloads.dcos.io/dcos/stable/1.8.9\n","  \"owner\": |-\n","    root\n","  \"path\": |-\n","    /etc/mesosphere/setup-flags/repository-url\n","  \"permissions\": |-\n","    0644\n","- \"content\": |\n","    [\"dcos-config--setup_27e644b00ac2447f3ba131338b3d8784120c7d62\", \"dcos-metadata--setup_27e644b00ac2447f3ba131338b3d8784120c7d62\"]\n","  \"owner\": |-\n","    root\n","  \"path\": |-\n","    /etc/mesosphere/setup-flags/cluster-packages.json\n","  \"permissions\": |-\n","    0644\n","- \"content\": |\n","    [Journal]\n","    MaxLevelConsole=warning\n","    RateLimitInterval=1s\n","    RateLimitBurst=20000\n","  \"owner\": |-\n","    root\n","  \"path\": |-\n","    /etc/systemd/journald.conf.d/dcos.conf\n","  \"permissions\": |-\n","    0644\n","- \"content\": |\n","    rexray:\n","      loglevel: info\n","      modules:\n","        default-admin:\n","          host: tcp://127.0.0.1:61003\n","      storageDrivers:\n","      - ec2\n","      volume:\n","        unmount:\n","          ignoreusedcount: true\n","  \"path\": |-\n","    /etc/rexray/config.yml\n","  \"permissions\": |-\n","    0644\n","- \"content\": |\n","    MESOS_CLUSTER=",{"Ref":"AWS::StackName"},"","\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/mesos-master-provider\n","- \"content\": |\n","    ADMINROUTER_ACTIVATE_AUTH_MODULE=",{"Ref":"OAuthEnabled"},"","\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/adminrouter.env\n","- \"content\": |\n","    MASTER_SOURCE=exhibitor_uri\n","    EXHIBITOR_URI=http://",{"Fn::GetAtt":["InternalMasterLoadBalancer","DNSName"]},":8181/exhibitor/v1/cluster/status","\n","    EXHIBITOR_ADDRESS=",{"Fn::GetAtt":["InternalMasterLoadBalancer","DNSName"]},"","\n","    RESOLVERS=169.254.169.253\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/dns_config\n","- \"content\": |\n","    EXHIBITOR_BACKEND=AWS_S3\n","    AWS_REGION=",{"Ref":"AWS::Region"},"","\n","    AWS_S3_BUCKET=",{"Ref":"ExhibitorS3Bucket"},"","\n","    AWS_S3_PREFIX=",{"Ref":"AWS::StackName"},"","\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/exhibitor\n","- \"content\": |\n","    {\"uiConfiguration\":{\"plugins\":{\"banner\":{\"enabled\":false,\"backgroundColor\":\"#1E232F\",\"foregroundColor\":\"#FFFFFF\",\"headerTitle\":null,\"headerContent\":null,\"footerContent\":null,\"imagePath\":null,\"dismissible\":null},\"branding\":{\"enabled\":false},\"external-links\": {\"enabled\": false},\n","\n","    \"authentication\":{\"enabled\":false},\n","\n","    \"oauth\":{\"enabled\":",{"Ref":"OAuthEnabled"},",\"authHost\":\"https://dcos.auth0.com\"},","\n","\n","\n","    \"tracking\":{\"enabled\":true}}}}\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/ui-config.json\n","- \"content\": |\n","    AWS_REGION=",{"Ref":"AWS::Region"},"","\n","    AWS_STACK_ID=",{"Ref":"AWS::StackId"},"","\n","    AWS_STACK_NAME=",{"Ref":"AWS::StackName"},"","\n","    AWS_IAM_MASTER_ROLE_NAME=",{"Ref":"MasterRole"},"","\n","    AWS_IAM_SLAVE_ROLE_NAME=",{"Ref":"SlaveRole"},"","\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/cfn_signal_metadata\n","- \"content\": |\n","    INTERNAL_MASTER_LB_DNSNAME=",{"Fn::GetAtt":["InternalMasterLoadBalancer","DNSName"]},"","\n","    MASTER_LB_DNSNAME=",{"Fn::GetAtt":["ElasticLoadBalancer","DNSName"]},"","\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/aws_dnsnames\n","- \"content\": |-\n","    {}\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/pkginfo.json\n","- \"content\": \"\"\n","  \"path\": |-\n","    /etc/mesosphere/roles/slave_public\n","- \"content\": \"\"\n","  \"path\": |-\n","    /etc/mesosphere/roles/aws\n"]]}},"BlockDeviceMappings":[{"DeviceName":"/dev/sdb","VirtualName":"ephemeral0"}],"AssociatePublicIpAddress":"true","IamInstanceProfile":{"Ref":"SlaveInstanceProfile"},"InstanceType":{"Fn::FindInMap":["Parameters","PublicSlaveInstanceType","default"]},"KeyName":{"Ref":"KeyName"},"EbsOptimized":"true"}},"PublicSubnetNetworkAclAssociation":{"Type":"AWS::EC2::SubnetNetworkAclAssociation","Properties":{"SubnetId":{"Ref":"PublicSubnet"},"NetworkAclId":{"Ref":"PublicNetworkAcl"}}},"PublicSlaveIngressOne":{"Type":"AWS::EC2::SecurityGroupIngress","Properties":{"FromPort":"0","ToPort":"21","GroupId":{"Ref":"PublicSlaveSecurityGroup"},"CidrIp":"0.0.0.0/0","IpProtocol":"tcp"}},"MasterServerGroup":{"Type":"AWS::AutoScaling::AutoScalingGroup","DependsOn":"GatewayToInternet","CreationPolicy":{"ResourceSignal":{"Timeout":{"Fn::FindInMap":["Parameters","StackCreationTimeout","default"]},"Count":1}},"Properties":{"MaxSize":1,"LaunchConfigurationName":{"Ref":"MasterLaunchConfig"},"MinSize":1,"LoadBalancerNames":[{"Ref":"ElasticLoadBalancer"},{"Ref":"InternalMasterLoadBalancer"}],"VPCZoneIdentifier":[{"Ref":"PublicSubnet"}],"DesiredCapacity":1,"Tags":[{"PropagateAtLaunch":"true","Key":"role","Value":"mesos-master"}],"AvailabilityZones":[{"Fn::GetAtt":["PublicSubnet","AvailabilityZone"]}]}},"MasterInstanceProfile":{"Type":"AWS::IAM::InstanceProfile","Properties":{"Roles":[{"Ref":"MasterRole"}],"Path":"/"}},"InboundNetworkAclEntry":{"Type":"AWS::EC2::NetworkAclEntry","Properties":{"Egress":"false","RuleAction":"allow","CidrBlock":"0.0.0.0/0","NetworkAclId":{"Ref":"PublicNetworkAcl"},"PortRange":{"From":"0","To":"65535"},"RuleNumber":"100","Protocol":"-1"}},"MasterLaunchConfig":{"Type":"AWS::AutoScaling::LaunchConfiguration","Properties":{"SecurityGroups":[{"Ref":"MasterSecurityGroup"},{"Ref":"AdminSecurityGroup"}],"ImageId":{"Fn::FindInMap":["RegionToAmi",{"Ref":"AWS::Region"},"stable"]},"UserData":{"Fn::Base64":{"Fn::Join":["",["#cloud-config\n","\"coreos\":\n","  \"units\":\n","  - \"command\": |-\n","      start\n","    \"content\": |\n","      [Unit]\n","      Description=AWS Setup: Formats the /var/lib ephemeral drive\n","      Before=var-lib.mount dbus.service\n","      [Service]\n","      Type=oneshot\n","      RemainAfterExit=yes\n","      ExecStart=/bin/bash -c \"(blkid -t TYPE=ext4 | grep xvdb) || (/usr/sbin/mkfs.ext4 -F /dev/xvdb)\"\n","    \"name\": |-\n","      format-var-lib-ephemeral.service\n","  - \"command\": |-\n","      start\n","    \"content\": |\n","      [Unit]\n","      Description=AWS Setup: Mount /var/lib\n","      Before=dbus.service\n","      [Mount]\n","      What=/dev/xvdb\n","      Where=/var/lib\n","      Type=ext4\n","    \"name\": |-\n","      var-lib.mount\n","  - \"command\": |-\n","      stop\n","    \"mask\": !!bool |-\n","      true\n","    \"name\": |-\n","      etcd.service\n","  - \"command\": |-\n","      stop\n","    \"mask\": !!bool |-\n","      true\n","    \"name\": |-\n","      update-engine.service\n","  - \"command\": |-\n","      stop\n","    \"mask\": !!bool |-\n","      true\n","    \"name\": |-\n","      locksmithd.service\n","  - \"command\": |-\n","      stop\n","    \"name\": |-\n","      systemd-resolved.service\n","  - \"command\": |-\n","      restart\n","    \"name\": |-\n","      systemd-journald.service\n","  - \"command\": |-\n","      restart\n","    \"name\": |-\n","      docker.service\n","  - \"command\": |-\n","      start\n","    \"content\": |\n","      [Unit]\n","      Before=dcos.target\n","      [Service]\n","      Type=oneshot\n","      StandardOutput=journal+console\n","      StandardError=journal+console\n","      ExecStartPre=/usr/bin/mkdir -p /etc/profile.d\n","      ExecStart=/usr/bin/ln -sf /opt/mesosphere/environment.export /etc/profile.d/dcos.sh\n","    \"name\": |-\n","      dcos-link-env.service\n","  - \"content\": |\n","      [Unit]\n","      Description=Pkgpanda: Download DC/OS to this host.\n","      After=network-online.target\n","      Wants=network-online.target\n","      ConditionPathExists=!/opt/mesosphere/\n","      [Service]\n","      Type=oneshot\n","      StandardOutput=journal+console\n","      StandardError=journal+console\n","      ExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20 -Y 100000 -y 60 -o /tmp/bootstrap.tar.xz https://downloads.dcos.io/dcos/stable/1.8.9/bootstrap/f21c4f494ef565f509929a6c99bee7da66309bd2.bootstrap.tar.xz\n","      ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere\n","      ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere\n","      ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz\n","    \"name\": |-\n","      dcos-download.service\n","  - \"command\": |-\n","      start\n","    \"content\": |\n","      [Unit]\n","      Description=Pkgpanda: Specialize DC/OS for this host.\n","      Requires=dcos-download.service\n","      After=dcos-download.service\n","      [Service]\n","      Type=oneshot\n","      StandardOutput=journal+console\n","      StandardError=journal+console\n","      EnvironmentFile=/opt/mesosphere/environment\n","      ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd\n","      [Install]\n","      WantedBy=multi-user.target\n","    \"enable\": !!bool |-\n","      true\n","    \"name\": |-\n","      dcos-setup.service\n","    \"no_block\": !!bool |-\n","      true\n","  - \"command\": |-\n","      start\n","    \"content\": |-\n","      [Unit]\n","      Description=AWS Setup: Signal CloudFormation Success\n","      ConditionPathExists=!/var/lib/dcos-cfn-signal\n","      [Service]\n","      Type=simple\n","      Restart=on-failure\n","      StartLimitInterval=0\n","      RestartSec=15s\n","      EnvironmentFile=/opt/mesosphere/environment\n","      EnvironmentFile=/opt/mesosphere/etc/cfn_signal_metadata\n","      Environment=\"AWS_CFN_SIGNAL_THIS_RESOURCE=MasterServerGroup\"\n","      ExecStartPre=/bin/ping -c1 leader.mesos\n","      ExecStartPre=/opt/mesosphere/bin/cfn-signal\n","      ExecStart=/usr/bin/touch /var/lib/dcos-cfn-signal\n","    \"name\": |-\n","      dcos-cfn-signal.service\n","    \"no_block\": !!bool |-\n","      true\n","  \"update\":\n","    \"reboot-strategy\": |-\n","      off\n","\"write_files\":\n","- \"content\": |\n","    https://downloads.dcos.io/dcos/stable/1.8.9\n","  \"owner\": |-\n","    root\n","  \"path\": |-\n","    /etc/mesosphere/setup-flags/repository-url\n","  \"permissions\": |-\n","    0644\n","- \"content\": |\n","    [\"dcos-config--setup_27e644b00ac2447f3ba131338b3d8784120c7d62\", \"dcos-metadata--setup_27e644b00ac2447f3ba131338b3d8784120c7d62\"]\n","  \"owner\": |-\n","    root\n","  \"path\": |-\n","    /etc/mesosphere/setup-flags/cluster-packages.json\n","  \"permissions\": |-\n","    0644\n","- \"content\": |\n","    [Journal]\n","    MaxLevelConsole=warning\n","    RateLimitInterval=1s\n","    RateLimitBurst=20000\n","  \"owner\": |-\n","    root\n","  \"path\": |-\n","    /etc/systemd/journald.conf.d/dcos.conf\n","  \"permissions\": |-\n","    0644\n","- \"content\": |\n","    rexray:\n","      loglevel: info\n","      modules:\n","        default-admin:\n","          host: tcp://127.0.0.1:61003\n","      storageDrivers:\n","      - ec2\n","      volume:\n","        unmount:\n","          ignoreusedcount: true\n","  \"path\": |-\n","    /etc/rexray/config.yml\n","  \"permissions\": |-\n","    0644\n","- \"content\": |\n","    MESOS_CLUSTER=",{"Ref":"AWS::StackName"},"","\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/mesos-master-provider\n","- \"content\": |\n","    ADMINROUTER_ACTIVATE_AUTH_MODULE=",{"Ref":"OAuthEnabled"},"","\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/adminrouter.env\n","- \"content\": |\n","    MASTER_SOURCE=exhibitor_uri\n","    EXHIBITOR_URI=http://",{"Fn::GetAtt":["InternalMasterLoadBalancer","DNSName"]},":8181/exhibitor/v1/cluster/status","\n","    EXHIBITOR_ADDRESS=",{"Fn::GetAtt":["InternalMasterLoadBalancer","DNSName"]},"","\n","    RESOLVERS=169.254.169.253\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/dns_config\n","- \"content\": |\n","    EXHIBITOR_BACKEND=AWS_S3\n","    AWS_REGION=",{"Ref":"AWS::Region"},"","\n","    AWS_S3_BUCKET=",{"Ref":"ExhibitorS3Bucket"},"","\n","    AWS_S3_PREFIX=",{"Ref":"AWS::StackName"},"","\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/exhibitor\n","- \"content\": |\n","    {\"uiConfiguration\":{\"plugins\":{\"banner\":{\"enabled\":false,\"backgroundColor\":\"#1E232F\",\"foregroundColor\":\"#FFFFFF\",\"headerTitle\":null,\"headerContent\":null,\"footerContent\":null,\"imagePath\":null,\"dismissible\":null},\"branding\":{\"enabled\":false},\"external-links\": {\"enabled\": false},\n","\n","    \"authentication\":{\"enabled\":false},\n","\n","    \"oauth\":{\"enabled\":",{"Ref":"OAuthEnabled"},",\"authHost\":\"https://dcos.auth0.com\"},","\n","\n","\n","    \"tracking\":{\"enabled\":true}}}}\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/ui-config.json\n","- \"content\": |\n","    AWS_REGION=",{"Ref":"AWS::Region"},"","\n","    AWS_STACK_ID=",{"Ref":"AWS::StackId"},"","\n","    AWS_STACK_NAME=",{"Ref":"AWS::StackName"},"","\n","    AWS_IAM_MASTER_ROLE_NAME=",{"Ref":"MasterRole"},"","\n","    AWS_IAM_SLAVE_ROLE_NAME=",{"Ref":"SlaveRole"},"","\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/cfn_signal_metadata\n","- \"content\": |\n","    INTERNAL_MASTER_LB_DNSNAME=",{"Fn::GetAtt":["InternalMasterLoadBalancer","DNSName"]},"","\n","    MASTER_LB_DNSNAME=",{"Fn::GetAtt":["ElasticLoadBalancer","DNSName"]},"","\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/aws_dnsnames\n","- \"content\": |-\n","    {}\n","  \"path\": |-\n","    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/pkginfo.json\n","- \"content\": \"\"\n","  \"path\": |-\n","    /etc/mesosphere/roles/master\n","- \"content\": \"\"\n","  \"path\": |-\n","    /etc/mesosphere/roles/aws_master\n","- \"content\": \"\"\n","  \"path\": |-\n","    /etc/mesosphere/roles/aws\n"]]}},"BlockDeviceMappings":[{"DeviceName":"/dev/sdb","VirtualName":"ephemeral0"}],"AssociatePublicIpAddress":"true","IamInstanceProfile":{"Ref":"MasterInstanceProfile"},"InstanceType":{"Fn::FindInMap":["Parameters","MasterInstanceType","default"]},"KeyName":{"Ref":"KeyName"},"EbsOptimized":"true"}},"SlaveRole":{"Type":"AWS::IAM::Role","Properties":{"AssumeRolePolicyDocument":{"Version":"2012-10-17","Statement":[{"Principal":{"Service":["ec2.amazonaws.com"]},"Effect":"Allow","Action":["sts:AssumeRole"]}]},"Policies":[{"PolicyDocument":{"Version":"2012-10-17","Statement":[{"Resource":[{"Ref":"AWS::StackId"},{"Fn::Join":["",[{"Ref":"AWS::StackId"},"/*"]]}],"Effect":"Allow","Action":["cloudformation:*"]},{"Resource":"*","Effect":"Allow","Action":["ec2:CreateTags","ec2:DescribeInstances","ec2:CreateVolume","ec2:DeleteVolume","ec2:AttachVolume","ec2:DetachVolume","ec2:DescribeVolumes","ec2:DescribeVolumeStatus","ec2:DescribeVolumeAttribute","ec2:CreateSnapshot","ec2:CopySnapshot","ec2:DeleteSnapshot","ec2:DescribeSnapshots","ec2:DescribeSnapshotAttribute","autoscaling:DescribeAutoScalingGroups","cloudwatch:PutMetricData"]}]},"PolicyName":"Slaves"}]}},"MasterSecurityGroup":{"Type":"AWS::EC2::SecurityGroup","Properties":{"GroupDescription":"Mesos Masters","SecurityGroupIngress":[{"FromPort":"5050","ToPort":"5050","IpProtocol":"tcp","SourceSecurityGroupId":{"Ref":"LbSecurityGroup"}},{"FromPort":"80","ToPort":"80","IpProtocol":"tcp","SourceSecurityGroupId":{"Ref":"LbSecurityGroup"}},{"FromPort":"443","ToPort":"443","IpProtocol":"tcp","SourceSecurityGroupId":{"Ref":"LbSecurityGroup"}},{"FromPort":"8080","ToPort":"8080","IpProtocol":"tcp","SourceSecurityGroupId":{"Ref":"LbSecurityGroup"}},{"FromPort":"8181","ToPort":"8181","IpProtocol":"tcp","SourceSecurityGroupId":{"Ref":"LbSecurityGroup"}},{"FromPort":"2181","ToPort":"2181","IpProtocol":"tcp","SourceSecurityGroupId":{"Ref":"LbSecurityGroup"}}],"VpcId":{"Ref":"Vpc"}}},"InternalMasterLoadBalancer":{"Type":"AWS::ElasticLoadBalancing::LoadBalancer","Properties":{"HealthCheck":{"Timeout":"5","UnhealthyThreshold":"2","Target":"TCP:5050","Interval":"30","HealthyThreshold":"2"},"SecurityGroups":[{"Ref":"LbSecurityGroup"},{"Ref":"AdminSecurityGroup"},{"Ref":"SlaveSecurityGroup"},{"Ref":"PublicSlaveSecurityGroup"},{"Ref":"MasterSecurityGroup"}],"Subnets":[{"Ref":"PublicSubnet"}],"Listeners":[{"LoadBalancerPort":"5050","InstancePort":"5050","InstanceProtocol":"HTTP","Protocol":"HTTP"},{"LoadBalancerPort":"2181","InstancePort":"2181","InstanceProtocol":"TCP","Protocol":"TCP"},{"LoadBalancerPort":"8181","InstancePort":"8181","InstanceProtocol":"HTTP","Protocol":"HTTP"},{"LoadBalancerPort":"80","InstancePort":"80","InstanceProtocol":"TCP","Protocol":"TCP"},{"LoadBalancerPort":"443","InstancePort":"443","InstanceProtocol":"TCP","Protocol":"TCP"},{"LoadBalancerPort":"8080","InstancePort":"8080","InstanceProtocol":"HTTP","Protocol":"HTTP"}],"Scheme":"internal"}},"PrivateOutboundNetworkAclEntry":{"Type":"AWS::EC2::NetworkAclEntry","Properties":{"Egress":"true","RuleAction":"allow","CidrBlock":"0.0.0.0/0","NetworkAclId":{"Ref":"PrivateNetworkAcl"},"PortRange":{"From":"0","To":"65535"},"RuleNumber":"100","Protocol":"-1"}},"PublicSlaveToSlaveIngress":{"Type":"AWS::EC2::SecurityGroupIngress","Properties":{"FromPort":"0","ToPort":"65535","GroupId":{"Ref":"SlaveSecurityGroup"},"IpProtocol":"-1","SourceSecurityGroupId":{"Ref":"PublicSlaveSecurityGroup"}}},"PrivateSubnetNetworkAclAssociation":{"Type":"AWS::EC2::SubnetNetworkAclAssociation","Properties":{"SubnetId":{"Ref":"PrivateSubnet"},"NetworkAclId":{"Ref":"PrivateNetworkAcl"}}},"PublicNetworkAcl":{"Type":"AWS::EC2::NetworkAcl","Properties":{"Tags":[{"Key":"Application","Value":{"Ref":"AWS::StackName"}},{"Key":"Network","Value":"Public"}],"VpcId":{"Ref":"Vpc"}}},"PublicRoute":{"Type":"AWS::EC2::Route","DependsOn":"GatewayToInternet","Properties":{"GatewayId":{"Ref":"InternetGateway"},"DestinationCidrBlock":"0.0.0.0/0","RouteTableId":{"Ref":"PublicRouteTable"}}},"LbSecurityGroup":{"Type":"AWS::EC2::SecurityGroup","Properties":{"GroupDescription":"Mesos Master LB","VpcId":{"Ref":"Vpc"}}},"SlaveToPublicSlaveIngress":{"Type":"AWS::EC2::SecurityGroupIngress","Properties":{"FromPort":"0","ToPort":"65535","GroupId":{"Ref":"PublicSlaveSecurityGroup"},"IpProtocol":"-1","SourceSecurityGroupId":{"Ref":"SlaveSecurityGroup"}}},"PublicSlaveIngressFour":{"Type":"AWS::EC2::SecurityGroupIngress","Properties":{"FromPort":"0","ToPort":"21","GroupId":{"Ref":"PublicSlaveSecurityGroup"},"CidrIp":"0.0.0.0/0","IpProtocol":"udp"}},"GatewayToInternet":{"Type":"AWS::EC2::VPCGatewayAttachment","DependsOn":"InternetGateway","Properties":{"InternetGatewayId":{"Ref":"InternetGateway"},"VpcId":{"Ref":"Vpc"}}},"MasterToPublicSlaveIngress":{"Type":"AWS::EC2::SecurityGroupIngress","Properties":{"FromPort":"0","ToPort":"65535","GroupId":{"Ref":"PublicSlaveSecurityGroup"},"IpProtocol":"-1","SourceSecurityGroupId":{"Ref":"MasterSecurityGroup"}}},"NATInstance":{"Type":"AWS::EC2::Instance","DependsOn":"GatewayToInternet","Properties":{"InstanceType":"m4.large","ImageId":{"Fn::FindInMap":["NATAmi",{"Ref":"AWS::Region"},"default"]},"SourceDestCheck":"false","NetworkInterfaces":[{"AssociatePublicIpAddress":"true","DeleteOnTermination":"true","GroupSet":[{"Ref":"SlaveSecurityGroup"},{"Ref":"MasterSecurityGroup"},{"Ref":"AdminSecurityGroup"}],"SubnetId":{"Ref":"PublicSubnet"},"DeviceIndex":"0"}],"KeyName":{"Ref":"KeyName"}}},"PublicSlaveServerGroup":{"Type":"AWS::AutoScaling::AutoScalingGroup","DependsOn":"GatewayToInternet","CreationPolicy":{"ResourceSignal":{"Timeout":{"Fn::FindInMap":["Parameters","StackCreationTimeout","default"]},"Count":{"Ref":"PublicSlaveInstanceCount"}}},"Properties":{"MaxSize":{"Ref":"PublicSlaveInstanceCount"},"LaunchConfigurationName":{"Ref":"PublicSlaveLaunchConfig"},"MinSize":{"Ref":"PublicSlaveInstanceCount"},"LoadBalancerNames":[{"Ref":"PublicSlaveLoadBalancer"}],"VPCZoneIdentifier":[{"Ref":"PublicSubnet"}],"DesiredCapacity":{"Ref":"PublicSlaveInstanceCount"},"Tags":[{"PropagateAtLaunch":"true","Key":"role","Value":"mesos-slave"}],"AvailabilityZones":[{"Fn::GetAtt":["PublicSubnet","AvailabilityZone"]}]}},"PublicSlaveLoadBalancer":{"Type":"AWS::ElasticLoadBalancing::LoadBalancer","DependsOn":"GatewayToInternet","Properties":{"HealthCheck":{"Timeout":"2","UnhealthyThreshold":"2","Target":"HTTP:9090/_haproxy_health_check","Interval":"5","HealthyThreshold":"2"},"SecurityGroups":[{"Ref":"PublicSlaveSecurityGroup"}],"Subnets":[{"Ref":"PublicSubnet"}],"Listeners":[{"LoadBalancerPort":"80","InstancePort":"80","InstanceProtocol":"TCP","Protocol":"TCP"},{"LoadBalancerPort":"443","InstancePort":"443","InstanceProtocol":"TCP","Protocol":"TCP"}]}},"AdminSecurityGroup":{"Type":"AWS::EC2::SecurityGroup","Properties":{"GroupDescription":"Enable admin access to servers","SecurityGroupIngress":[{"FromPort":"22","ToPort":"22","CidrIp":{"Ref":"AdminLocation"},"IpProtocol":"tcp"},{"FromPort":"80","ToPort":"80","CidrIp":{"Ref":"AdminLocation"},"IpProtocol":"tcp"},{"FromPort":"443","ToPort":"443","CidrIp":{"Ref":"AdminLocation"},"IpProtocol":"tcp"}],"VpcId":{"Ref":"Vpc"}}},"SlaveToMasterIngress":{"Type":"AWS::EC2::SecurityGroupIngress","Properties":{"FromPort":"0","ToPort":"65535","GroupId":{"Ref":"MasterSecurityGroup"},"IpProtocol":"-1","SourceSecurityGroupId":{"Ref":"SlaveSecurityGroup"}}},"PrivateRouteTable":{"Type":"AWS::EC2::RouteTable","Properties":{"Tags":[{"Key":"Application","Value":{"Ref":"AWS::StackName"}},{"Key":"Network","Value":"Public"}],"VpcId":{"Ref":"Vpc"}}},"PublicSubnet":{"Type":"AWS::EC2::Subnet","Properties":{"CidrBlock":{"Fn::FindInMap":["Parameters","PublicSubnetRange","default"]},"Tags":[{"Key":"Application","Value":{"Ref":"AWS::StackName"}},{"Key":"Network","Value":"Public"}],"VpcId":{"Ref":"Vpc"}},"DependsOn":"Vpc"},"Vpc":{"Type":"AWS::EC2::VPC","Properties":{"CidrBlock":{"Fn::FindInMap":["Parameters","VPCSubnetRange","default"]},"EnableDnsHostnames":"true","EnableDnsSupport":"true","Tags":[{"Key":"Application","Value":{"Ref":"AWS::StackName"}},{"Key":"Network","Value":"Public"}]}},"SlaveServerGroup":{"Type":"AWS::AutoScaling::AutoScalingGroup","DependsOn":"GatewayToInternet","CreationPolicy":{"ResourceSignal":{"Timeout":{"Fn::FindInMap":["Parameters","StackCreationTimeout","default"]},"Count":{"Ref":"SlaveInstanceCount"}}},"Properties":{"MaxSize":{"Ref":"SlaveInstanceCount"},"LaunchConfigurationName":{"Ref":"SlaveLaunchConfig"},"MinSize":{"Ref":"SlaveInstanceCount"},"VPCZoneIdentifier":[{"Ref":"PrivateSubnet"}],"DesiredCapacity":{"Ref":"SlaveInstanceCount"},"Tags":[{"PropagateAtLaunch":"true","Key":"role","Value":"mesos-slave"}],"AvailabilityZones":[{"Fn::GetAtt":["PrivateSubnet","AvailabilityZone"]}]}},"PublicRouteTable":{"Type":"AWS::EC2::RouteTable","Properties":{"Tags":[{"Key":"Application","Value":{"Ref":"AWS::StackName"}},{"Key":"Network","Value":"Public"}],"VpcId":{"Ref":"Vpc"}},"DependsOn":"Vpc"},"PrivateSubnetRouteTableAssociation":{"Type":"AWS::EC2::SubnetRouteTableAssociation","Properties":{"RouteTableId":{"Ref":"PrivateRouteTable"},"SubnetId":{"Ref":"PrivateSubnet"}}},"SlaveToSlaveIngress":{"Type":"AWS::EC2::SecurityGroupIngress","Properties":{"FromPort":"0","ToPort":"65535","GroupId":{"Ref":"SlaveSecurityGroup"},"IpProtocol":"-1","SourceSecurityGroupId":{"Ref":"SlaveSecurityGroup"}}},"ExhibitorS3Bucket":{"Type":"AWS::S3::Bucket","DeletionPolicy":"Retain"},"PublicSlaveIngressFive":{"Type":"AWS::EC2::SecurityGroupIngress","Properties":{"FromPort":"23","ToPort":"5050","GroupId":{"Ref":"PublicSlaveSecurityGroup"},"CidrIp":"0.0.0.0/0","IpProtocol":"udp"}},"PublicSlaveIngressThree":{"Type":"AWS::EC2::SecurityGroupIngress","Properties":{"FromPort":"5052","ToPort":"32000","GroupId":{"Ref":"PublicSlaveSecurityGroup"},"CidrIp":"0.0.0.0/0","IpProtocol":"tcp"}},"DHCPOptions":{"Type":"AWS::EC2::DHCPOptions","Properties":{"DomainName":{"Fn::If":["RegionIsUsEast1","ec2.internal",{"Fn::Join":["",[{"Ref":"AWS::Region"},".compute.internal"]]}]},"DomainNameServers":["AmazonProvidedDNS"]}},"PrivateNetworkAcl":{"Type":"AWS::EC2::NetworkAcl","Properties":{"Tags":[{"Key":"Application","Value":{"Ref":"AWS::StackName"}},{"Key":"Network","Value":"Public"}],"VpcId":{"Ref":"Vpc"}}}},"Outputs":{"DnsAddress":{"Description":"Mesos Master","Value":{"Fn::GetAtt":["ElasticLoadBalancer","DNSName"]}},"ExhibitorS3Bucket":{"Description":"Exhibitor S3 bucket name","Value":{"Ref":"ExhibitorS3Bucket"}},"PublicSlaveDnsAddress":{"Description":"Public slaves","Value":{"Fn::GetAtt":["PublicSlaveLoadBalancer","DNSName"]}}},"AWSTemplateFormatVersion":"2010-09-09"}